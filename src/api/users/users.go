package users

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

import (
	"context"
	"encoding/json"

	"github.com/stytchauth/stytch-go/v7/stytch"
	"github.com/stytchauth/stytch-go/v7/stytch/stytcherror"
)

type Client struct {
	C *stytch.Client
}

const subURL = "users"

func (c *Client) Create(
	ctx context.Context,
	body *stytch.CreateParams,
) (*stytch.CreateResponse, error) {
	path := subURL + "//v1/users"

	var retVal stytch.CreateResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Getpending(
	ctx context.Context,
	body *stytch.GetpendingParams,
) (*stytch.GetpendingResponse, error) {
	path := subURL + "//v1/users/pending"

	var retVal stytch.GetpendingResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "GET", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Get(
	ctx context.Context,
	body *stytch.GetParams,
) (*stytch.GetResponse, error) {
	path := subURL + "//v1/users/{user_id}"

	var retVal stytch.GetResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "GET", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Searchusersexternal(
	ctx context.Context,
	body *stytch.SearchusersexternalParams,
) (*stytch.SearchusersexternalResponse, error) {
	path := subURL + "//v1/users/search"

	var retVal stytch.SearchusersexternalResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Updateuser(
	ctx context.Context,
	body *stytch.UpdateuserParams,
) (*stytch.UpdateuserResponse, error) {
	path := subURL + "//v1/users/{user_id}"

	var retVal stytch.UpdateuserResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "PUT", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Deleteuser(
	ctx context.Context,
	body *stytch.DeleteuserParams,
) (*stytch.DeleteuserResponse, error) {
	path := subURL + "//v1/users/{user_id}"

	var retVal stytch.DeleteuserResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "DELETE", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Getbyemailandprojectid(
	ctx context.Context,
	body *stytch.GetbyemailandprojectidParams,
) (*stytch.GetbyemailandprojectidResponse, error) {
	path := subURL + "//v1/sdk/users"

	var retVal stytch.GetbyemailandprojectidResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "GET", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Deleteuseremail(
	ctx context.Context,
	body *stytch.DeleteuseremailParams,
) (*stytch.DeleteuseremailResponse, error) {
	path := subURL + "//v1/users/emails/{email_id}"

	var retVal stytch.DeleteuseremailResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "DELETE", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Deleteuserphonenumber(
	ctx context.Context,
	body *stytch.DeleteuserphonenumberParams,
) (*stytch.DeleteuserphonenumberResponse, error) {
	path := subURL + "//v1/users/phone_numbers/{phone_id}"

	var retVal stytch.DeleteuserphonenumberResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "DELETE", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Deleteuserwebauthnregistration(
	ctx context.Context,
	body *stytch.DeleteuserwebauthnregistrationParams,
) (*stytch.DeleteuserwebauthnregistrationResponse, error) {
	path := subURL + "//v1/users/webauthn_registrations/{webauthn_registration_id}"

	var retVal stytch.DeleteuserwebauthnregistrationResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "DELETE", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Deleteuserbiometricregistration(
	ctx context.Context,
	body *stytch.DeleteuserbiometricregistrationParams,
) (*stytch.DeleteuserbiometricregistrationResponse, error) {
	path := subURL + "//v1/users/biometric_registrations/{biometric_registration_id}"

	var retVal stytch.DeleteuserbiometricregistrationResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "DELETE", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Deleteusertotp(
	ctx context.Context,
	body *stytch.DeleteusertotpParams,
) (*stytch.DeleteusertotpResponse, error) {
	path := subURL + "//v1/users/totps/{totp_id}"

	var retVal stytch.DeleteusertotpResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "DELETE", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Deleteusercryptowallet(
	ctx context.Context,
	body *stytch.DeleteusercryptowalletParams,
) (*stytch.DeleteusercryptowalletResponse, error) {
	path := subURL + "//v1/users/crypto_wallets/{crypto_wallet_id}"

	var retVal stytch.DeleteusercryptowalletResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "DELETE", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Deleteuserpassword(
	ctx context.Context,
	body *stytch.DeleteuserpasswordParams,
) (*stytch.DeleteuserpasswordResponse, error) {
	path := subURL + "//v1/users/passwords/{password_id}"

	var retVal stytch.DeleteuserpasswordResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "DELETE", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Deleteoauthuserregistration(
	ctx context.Context,
	body *stytch.DeleteoauthuserregistrationParams,
) (*stytch.DeleteoauthuserregistrationResponse, error) {
	path := subURL + "//v1/users/oauth/{oauth_user_registration_id}"

	var retVal stytch.DeleteoauthuserregistrationResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "DELETE", path, nil, jsonBody, &retVal)

	return &retVal, err
}

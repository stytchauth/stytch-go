package passwords

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

import (
	"context"
	"encoding/json"

	"github.com/stytchauth/stytch-go/v7/stytch"
	"github.com/stytchauth/stytch-go/v7/stytch/stytcherror"
)

type Client struct {
	C *stytch.Client
}

const subURL = "passwords"

func (c *Client) Create(
	ctx context.Context,
	body *stytch.CreateParams,
) (*stytch.CreateResponse, error) {
	path := subURL + "//v1/passwords"

	var retVal stytch.CreateResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Authenticate(
	ctx context.Context,
	body *stytch.AuthenticateParams,
) (*stytch.AuthenticateResponse, error) {
	path := subURL + "//v1/passwords/authenticate"

	var retVal stytch.AuthenticateResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Passwordsemailresetstart(
	ctx context.Context,
	body *stytch.PasswordsemailresetstartParams,
) (*stytch.PasswordsemailresetstartResponse, error) {
	path := subURL + "//v1/passwords/email/reset/start"

	var retVal stytch.PasswordsemailresetstartResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Passwordsemailreset(
	ctx context.Context,
	body *stytch.PasswordsemailresetParams,
) (*stytch.PasswordsemailresetResponse, error) {
	path := subURL + "//v1/passwords/email/reset"

	var retVal stytch.PasswordsemailresetResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Passwordsexistingpasswordreset(
	ctx context.Context,
	body *stytch.PasswordsexistingpasswordresetParams,
) (*stytch.PasswordsexistingpasswordresetResponse, error) {
	path := subURL + "//v1/passwords/existing_password/reset"

	var retVal stytch.PasswordsexistingpasswordresetResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Passwordssessionreset(
	ctx context.Context,
	body *stytch.PasswordssessionresetParams,
) (*stytch.PasswordssessionresetResponse, error) {
	path := subURL + "//v1/passwords/session/reset"

	var retVal stytch.PasswordssessionresetResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Migrate(
	ctx context.Context,
	body *stytch.MigrateParams,
) (*stytch.MigrateResponse, error) {
	path := subURL + "//v1/passwords/migrate"

	var retVal stytch.MigrateResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Passwordsstrengthcheck(
	ctx context.Context,
	body *stytch.PasswordsstrengthcheckParams,
) (*stytch.PasswordsstrengthcheckResponse, error) {
	path := subURL + "//v1/passwords/strength_check"

	var retVal stytch.PasswordsstrengthcheckResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

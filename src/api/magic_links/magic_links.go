package magic_links

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

import (
	"context"
	"encoding/json"

	"github.com/stytchauth/stytch-go/v7/stytch"
	"github.com/stytchauth/stytch-go/v7/stytch/stytcherror"
)

type Client struct {
	C *stytch.Client
}

const subURL = "magic_links"

func (c *Client) Sendmagicbyemail(
	ctx context.Context,
	body *stytch.SendmagicbyemailParams,
) (*stytch.SendmagicbyemailResponse, error) {
	path := subURL + "//v1/magic_links/send_by_email"

	var retVal stytch.SendmagicbyemailResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Magiclinksemailsend(
	ctx context.Context,
	body *stytch.MagiclinksemailsendParams,
) (*stytch.MagiclinksemailsendResponse, error) {
	path := subURL + "//v1/magic_links/email/send"

	var retVal stytch.MagiclinksemailsendResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Authenticatemagic(
	ctx context.Context,
	body *stytch.AuthenticatemagicParams,
) (*stytch.AuthenticatemagicResponse, error) {
	path := subURL + "//v1/magic_links/{token}/authenticate"

	var retVal stytch.AuthenticatemagicResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Magiclinksauthenticate(
	ctx context.Context,
	body *stytch.MagiclinksauthenticateParams,
) (*stytch.MagiclinksauthenticateResponse, error) {
	path := subURL + "//v1/magic_links/authenticate"

	var retVal stytch.MagiclinksauthenticateResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Magiclinksemailloginorcreate(
	ctx context.Context,
	body *stytch.MagiclinksemailloginorcreateParams,
) (*stytch.MagiclinksemailloginorcreateResponse, error) {
	path := subURL + "//v1/magic_links/email/login_or_create"

	var retVal stytch.MagiclinksemailloginorcreateResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Sdkmagiclinksemailloginorcreate(
	ctx context.Context,
	body *stytch.SdkmagiclinksemailloginorcreateParams,
) (*stytch.SdkmagiclinksemailloginorcreateResponse, error) {
	path := subURL + "//v1/sdk/magic_links/email/login_or_create"

	var retVal stytch.SdkmagiclinksemailloginorcreateResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Invitebyemail(
	ctx context.Context,
	body *stytch.InvitebyemailParams,
) (*stytch.InvitebyemailResponse, error) {
	path := subURL + "//v1/magic_links/invite_by_email"

	var retVal stytch.InvitebyemailResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Magiclinksemailinvite(
	ctx context.Context,
	body *stytch.MagiclinksemailinviteParams,
) (*stytch.MagiclinksemailinviteResponse, error) {
	path := subURL + "//v1/magic_links/email/invite"

	var retVal stytch.MagiclinksemailinviteResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Magiclinksemailrevokeinvite(
	ctx context.Context,
	body *stytch.MagiclinksemailrevokeinviteParams,
) (*stytch.MagiclinksemailrevokeinviteResponse, error) {
	path := subURL + "//v1/magic_links/email/revoke_invite"

	var retVal stytch.MagiclinksemailrevokeinviteResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Create(
	ctx context.Context,
	body *stytch.CreateParams,
) (*stytch.CreateResponse, error) {
	path := subURL + "//v1/magic_links"

	var retVal stytch.CreateResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Magiclinkredirect(
	ctx context.Context,
	body *stytch.MagiclinkredirectParams,
) (*stytch.MagiclinkredirectResponse, error) {
	path := subURL + "//v1/magic_links/redirect"

	var retVal stytch.MagiclinkredirectResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "GET", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Magiclinksredirectcaptcha(
	ctx context.Context,
	body *stytch.MagiclinksredirectcaptchaParams,
) (*stytch.MagiclinksredirectcaptchaResponse, error) {
	path := subURL + "//v1/magic_links/redirect/captcha"

	var retVal stytch.MagiclinksredirectcaptchaResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

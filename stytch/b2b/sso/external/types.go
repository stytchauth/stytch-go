package external

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

import (
	"github.com/stytchauth/stytch-go/v15/stytch/b2b/sso"
	"github.com/stytchauth/stytch-go/v15/stytch/methodoptions"
)

// CreateConnectionParams: Request type for `External.CreateConnection`.
type CreateConnectionParams struct {
	// OrganizationID: Globally unique UUID that identifies a specific Organization. The `organization_id` is
	// critical to perform operations on an Organization, so be sure to preserve this value.
	OrganizationID string `json:"organization_id,omitempty"`
	// ExternalOrganizationID: Globally unique UUID that identifies a different Organization within your
	// Project.
	ExternalOrganizationID string `json:"external_organization_id,omitempty"`
	// ExternalConnectionID: Globally unique UUID that identifies a specific SSO connection configured for a
	// different Organization in your Project.
	ExternalConnectionID string `json:"external_connection_id,omitempty"`
	// DisplayName: A human-readable display name for the connection.
	DisplayName                       string                                      `json:"display_name,omitempty"`
	ConnectionImplicitRoleAssignments []*sso.SAMLConnectionImplicitRoleAssignment `json:"connection_implicit_role_assignments,omitempty"`
	GroupImplicitRoleAssignments      []*sso.SAMLGroupImplicitRoleAssignment      `json:"group_implicit_role_assignments,omitempty"`
}

// UpdateConnectionParams: Request type for `External.UpdateConnection`.
type UpdateConnectionParams struct {
	// OrganizationID: Globally unique UUID that identifies a specific Organization. The `organization_id` is
	// critical to perform operations on an Organization, so be sure to preserve this value.
	OrganizationID string `json:"organization_id,omitempty"`
	// ConnectionID: Globally unique UUID that identifies a specific External SSO Connection.
	ConnectionID string `json:"connection_id,omitempty"`
	// DisplayName: A human-readable display name for the connection.
	DisplayName string `json:"display_name,omitempty"`
	// ExternalConnectionImplicitRoleAssignments: All Members who log in with this External connection will
	// implicitly receive the specified Roles. See the
	// [RBAC guide](https://stytch.com/docs/b2b/guides/rbac/role-assignment) for more information about role
	// assignment. Implicit role assignments are not supported for External connections if the underlying SSO
	// connection is an OIDC connection.
	ExternalConnectionImplicitRoleAssignments []*sso.ConnectionImplicitRoleAssignment `json:"external_connection_implicit_role_assignments,omitempty"`
	// ExternalGroupImplicitRoleAssignments: Defines the names of the groups
	//  that grant specific role assignments. For each group-Role pair, if a Member logs in with this external
	// connection and
	//  belongs to the specified group, they will be granted the associated Role. See the
	//  [RBAC guide](https://stytch.com/docs/b2b/guides/rbac/role-assignment) for more information about role
	// assignment. Before adding any group implicit role assignments to an external connection, you must add a
	// "groups" key to the underlying SAML connection's
	//          `attribute_mapping`. Make sure that the SAML connection IdP is configured to correctly send the
	// group information. Implicit role assignments are not supported
	//          for External connections if the underlying SSO connection is an OIDC connection.
	ExternalGroupImplicitRoleAssignments []*sso.GroupImplicitRoleAssignment `json:"external_group_implicit_role_assignments,omitempty"`
}

// CreateConnectionRequestOptions:
type CreateConnectionRequestOptions struct {
	// Authorization: Optional authorization object.
	// Pass in an active Stytch Member session token or session JWT and the request
	// will be run using that member's permissions.
	Authorization methodoptions.Authorization `json:"authorization,omitempty"`
}

func (o *CreateConnectionRequestOptions) AddHeaders(headers map[string][]string) map[string][]string {
	headers = o.Authorization.AddHeaders(headers)
	return headers
}

// UpdateConnectionRequestOptions:
type UpdateConnectionRequestOptions struct {
	// Authorization: Optional authorization object.
	// Pass in an active Stytch Member session token or session JWT and the request
	// will be run using that member's permissions.
	Authorization methodoptions.Authorization `json:"authorization,omitempty"`
}

func (o *UpdateConnectionRequestOptions) AddHeaders(headers map[string][]string) map[string][]string {
	headers = o.Authorization.AddHeaders(headers)
	return headers
}

// CreateConnectionResponse: Response type for `External.CreateConnection`.
type CreateConnectionResponse struct {
	// RequestID: Globally unique UUID that is returned with every API call. This value is important to log for
	// debugging purposes; we may ask for this value to help identify a specific API call when helping you
	// debug an issue.
	RequestID string `json:"request_id,omitempty"`
	// StatusCode: The HTTP status code of the response. Stytch follows standard HTTP response status code
	// patterns, e.g. 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX
	// are server errors.
	StatusCode int32 `json:"status_code,omitempty"`
	// Connection: The `External Connection` object affected by this API call. See the
	// [External Connection Object](https://stytch.com/docs/b2b/api/external-connection-object) for complete
	// response field details.
	Connection *sso.Connection `json:"connection,omitempty"`
}

// UpdateConnectionResponse: Response type for `External.UpdateConnection`.
type UpdateConnectionResponse struct {
	// RequestID: Globally unique UUID that is returned with every API call. This value is important to log for
	// debugging purposes; we may ask for this value to help identify a specific API call when helping you
	// debug an issue.
	RequestID string `json:"request_id,omitempty"`
	// StatusCode: The HTTP status code of the response. Stytch follows standard HTTP response status code
	// patterns, e.g. 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX
	// are server errors.
	StatusCode int32 `json:"status_code,omitempty"`
	// Connection: The `External Connection` object affected by this API call. See the
	// [External Connection Object](https://stytch.com/docs/b2b/api/external-connection-object) for complete
	// response field details.
	Connection *sso.Connection `json:"connection,omitempty"`
}

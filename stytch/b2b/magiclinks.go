package b2b

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

import (
	"context"
	"encoding/json"

	"github.com/stytchauth/stytch-go/v8/stytch"
	"github.com/stytchauth/stytch-go/v8/stytch/b2b/magiclinks"
	"github.com/stytchauth/stytch-go/v8/stytch/stytcherror"
)

type MagicLinksClient struct {
	C         *stytch.Client
	Email     *MagicLinksEmailClient
	Discovery *MagicLinksDiscoveryClient
}

func NewMagicLinksClient(c *stytch.Client) *MagicLinksClient {
	return &MagicLinksClient{
		C:         c,
		Email:     NewMagicLinksEmailClient(c),
		Discovery: NewMagicLinksDiscoveryClient(c),
	}
}

// Authenticate a Member with a Magic Link. This endpoint requires a Magic Link token that is not expired
// or previously used. Provide a value for `session_duration_minutes` to receive a Session. If the Memberâ€™s
// status is `pending` or `invited`, they will be updated to `active`.
func (c *MagicLinksClient) Authenticate(
	ctx context.Context,
	body *magiclinks.AuthenticateParams,
) (*magiclinks.AuthenticateResponse, error) {
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("error marshaling request body")
		}
	}

	var retVal magiclinks.AuthenticateResponse
	err = c.C.NewRequest(
		ctx,
		"POST",
		"/v1/b2b/magic_links/authenticate",
		nil,
		jsonBody,
		&retVal,
	)
	return &retVal, err
}

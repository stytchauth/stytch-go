package b2b

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

import (
	"context"
	"encoding/json"

	"github.com/stytchauth/stytch-go/v15/stytch"
	"github.com/stytchauth/stytch-go/v15/stytch/b2b/magiclinks/discovery"
	"github.com/stytchauth/stytch-go/v15/stytch/stytcherror"
)

type MagicLinksDiscoveryClient struct {
	C stytch.Client
}

func NewMagicLinksDiscoveryClient(c stytch.Client) *MagicLinksDiscoveryClient {
	return &MagicLinksDiscoveryClient{
		C: c,
	}
}

// Authenticate: Authenticates the Discovery Magic Link token and exchanges it for an Intermediate Session
// Token. Intermediate Session Tokens can be used for various Discovery login flows and are valid for 10
// minutes.
func (c *MagicLinksDiscoveryClient) Authenticate(
	ctx context.Context,
	body *discovery.AuthenticateParams,
) (*discovery.AuthenticateResponse, error) {
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("error marshaling request body")
		}
	}

	headers := make(map[string][]string)

	var retVal discovery.AuthenticateResponse
	err = c.C.NewRequest(
		ctx,
		stytch.RequestParams{
			Method:      "POST",
			Path:        "/v1/b2b/magic_links/discovery/authenticate",
			QueryParams: nil,
			Body:        jsonBody,
			V:           &retVal,
			Headers:     headers,
		},
	)
	return &retVal, err
}

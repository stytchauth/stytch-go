package b2b

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

import (
	"context"
	"encoding/json"

	"github.com/stytchauth/stytch-go/v8/stytch"
	"github.com/stytchauth/stytch-go/v8/stytch/b2b/discovery/organizations"
	"github.com/stytchauth/stytch-go/v8/stytch/stytcherror"
)

type DiscoveryOrganizationsClient struct {
	C *stytch.Client
}

func NewDiscoveryOrganizationsClient(c *stytch.Client) *DiscoveryOrganizationsClient {
	return &DiscoveryOrganizationsClient{
		C: c,
	}
}

// Create: If an end user does not want to join any already-existing organization, or has no possible
// organizations to join, this endpoint can be used to create a new
// [Organization](https://stytch.com/docs/b2b/api/organization-object) and
// [Member](https://stytch.com/docs/b2b/api/member-object).
//
// This operation consumes the Intermediate Session.
//
// This endpoint can also be used to start an initial session for the newly created member and organization.
func (c *DiscoveryOrganizationsClient) Create(
	ctx context.Context,
	body *organizations.CreateParams,
) (*organizations.CreateResponse, error) {
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("error marshaling request body")
		}
	}

	var retVal organizations.CreateResponse
	err = c.C.NewRequest(
		ctx,
		"POST",
		"/v1/b2b/discovery/organizations/create",
		nil,
		jsonBody,
		&retVal,
	)
	return &retVal, err
}

// List all possible organization relationships connected to a
// [Member Session](https://stytch.com/docs/b2b/api/session-object) or Intermediate Session.
//
// When a Member Session is passed in, relationships with a type of `active_member`, `pending_member`, or
// `invited_member`
// will be returned, and any membership can be assumed by calling the
// [Exchange Session](https://stytch.com/docs/b2b/api/exchange-session) endpoint.
//
// When an Intermediate Session is passed in, all relationship types - `active_member`, `pending_member`,
// `invited_member`,
// and `eligible_to_join_by_email_domain` - will be returned,
// and any membership can be assumed by calling the
// [Exchange Intermediate Session](https://stytch.com/docs/b2b/api/exchange-intermediate-session) endpoint.
//
// This endpoint requires either an `intermediate_session_token`, `session_jwt` or `session_token` be
// included in the request.
// It will return an error if multiple are present.
//
// This operation does not consume the Intermediate Session or Session Token passed in.
func (c *DiscoveryOrganizationsClient) List(
	ctx context.Context,
	body *organizations.ListParams,
) (*organizations.ListResponse, error) {
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("error marshaling request body")
		}
	}

	var retVal organizations.ListResponse
	err = c.C.NewRequest(
		ctx,
		"POST",
		"/v1/b2b/discovery/organizations",
		nil,
		jsonBody,
		&retVal,
	)
	return &retVal, err
}

package b2b

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

import (
	"context"
	"encoding/json"

	"github.com/stytchauth/stytch-go/v16/stytch"
	"github.com/stytchauth/stytch-go/v16/stytch/b2b/discovery/organizations"
	"github.com/stytchauth/stytch-go/v16/stytch/stytcherror"
)

type DiscoveryOrganizationsClient struct {
	C stytch.Client
}

func NewDiscoveryOrganizationsClient(c stytch.Client) *DiscoveryOrganizationsClient {
	return &DiscoveryOrganizationsClient{
		C: c,
	}
}

// Create: This endpoint allows you to exchange the `intermediate_session_token` returned when the user
// successfully completes a authentication flow to create a new
// [Organization](https://stytch.com/docs/b2b/api/organization-object) and
// [Member](https://stytch.com/docs/b2b/api/member-object) and log the user in. If the user wants to log
// into an existing Organization, use the
// [Exchange Intermediate Session endpoint](https://stytch.com/docs/b2b/api/exchange-intermediate-session)
// instead.
//
// Stytch **requires that users verify their email address** prior to creating a new Organization in order
// to prevent Account Takeover (ATO) attacks and phishing.
//
// If the user authenticated using a method that **does not** provide real-time email verification
// (returning password auth, Github/Slack/Hubspot OAuth) this API will return `member_authenticated: false`
// and an `intermediate_session_token` to indicate that the user must perform additional authentication via
// one of the options listed in `primary_required.allowed_auth_methods` to finish logging in.
//
// If you specified an `mfa_policy: REQUIRED_FOR_ALL` in the request, this API will return
// `member_authenticated: false`, an `intermediate_session_token`, and `mfa_required` in order to indicate
// that you must prompt the user to enroll in MFA.
//
// Include the `intermediate_session_token` when calling the `authenticate()` method that the user needed
// to perform to verify their email or enroll in MFA. Once the user has completed the authentication
// requirements they were missing, they will be granted a full `session_token` and `session_jwt` and be
// successfully logged in.
//
// If the user logged in with a method that **does** provide real-time email verification (Email Magic
// Links, Email OTP, Google/Microsoft OAuth, initial email verification when creating a new password) this
// API will return `member_authenticated: true` and a `session_jwt` and `session_token` to indicate that
// the user has successfully logged in.
//
// The Member created by this endpoint will automatically be granted the `stytch_admin` Role. See the
// [RBAC guide](https://stytch.com/docs/b2b/guides/rbac/stytch-default) for more details on this Role.
func (c *DiscoveryOrganizationsClient) Create(
	ctx context.Context,
	body *organizations.CreateParams,
) (*organizations.CreateResponse, error) {
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("error marshaling request body")
		}
	}

	headers := make(map[string][]string)

	var retVal organizations.CreateResponse
	err = c.C.NewRequest(
		ctx,
		stytch.RequestParams{
			Method:      "POST",
			Path:        "/v1/b2b/discovery/organizations/create",
			QueryParams: nil,
			Body:        jsonBody,
			V:           &retVal,
			Headers:     headers,
		},
	)
	return &retVal, err
}

// List all possible organization relationships connected to a
// [Member Session](https://stytch.com/docs/b2b/api/session-object) or Intermediate Session.
//
// When a Member Session is passed in, relationships with a type of `active_member`, `pending_member`, or
// `invited_member`
// will be returned, and any membership can be assumed by calling the
// [Exchange Session](https://stytch.com/docs/b2b/api/exchange-session) endpoint.
//
// When an Intermediate Session is passed in, all relationship types - `active_member`, `pending_member`,
// `invited_member`,
// `eligible_to_join_by_email_domain`, and `eligible_to_join_by_oauth_tenant` - will be returned,
// and any membership can be assumed by calling the
// [Exchange Intermediate Session](https://stytch.com/docs/b2b/api/exchange-intermediate-session) endpoint.
//
// This endpoint requires either an `intermediate_session_token`, `session_jwt` or `session_token` be
// included in the request.
// It will return an error if multiple are present.
//
// This operation does not consume the Intermediate Session or Session Token passed in.
func (c *DiscoveryOrganizationsClient) List(
	ctx context.Context,
	body *organizations.ListParams,
) (*organizations.ListResponse, error) {
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("error marshaling request body")
		}
	}

	headers := make(map[string][]string)

	var retVal organizations.ListResponse
	err = c.C.NewRequest(
		ctx,
		stytch.RequestParams{
			Method:      "POST",
			Path:        "/v1/b2b/discovery/organizations",
			QueryParams: nil,
			Body:        jsonBody,
			V:           &retVal,
			Headers:     headers,
		},
	)
	return &retVal, err
}

package oauthproviders

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

// MicrosoftParams: Request type for `OAuthProviders.Google`, `OAuthProviders.Microsoft`.
type MicrosoftParams struct {
	// OrganizationID: Globally unique UUID that identifies a specific Organization. The `organization_id` is
	// critical to perform operations on an Organization, so be sure to preserve this value.
	OrganizationID string `json:"organization_id,omitempty"`
	// MemberID: Globally unique UUID that identifies a specific Member. The `member_id` is critical to perform
	// operations on a Member, so be sure to preserve this value.
	MemberID            string `json:"member_id,omitempty"`
	IncludeRefreshToken bool   `json:"include_refresh_token,omitempty"`
}

// GoogleResponse: Response type for `OAuthProviders.Google`.
type GoogleResponse struct {
	// RequestID: Globally unique UUID that is returned with every API call. This value is important to log for
	// debugging purposes; we may ask for this value to help identify a specific API call when helping you
	// debug an issue.
	RequestID string `json:"request_id,omitempty"`
	// ProviderType: Denotes the OAuth identity provider that the user has authenticated with, e.g. Google,
	// Microsoft, GitHub etc.
	ProviderType string `json:"provider_type,omitempty"`
	// ProviderSubject: The unique identifier for the User within a given OAuth provider. Also commonly called
	// the `sub` or "Subject field" in OAuth protocols.
	ProviderSubject string `json:"provider_subject,omitempty"`
	// AccessToken: The `access_token` that you may use to access the User's data in the provider's API.
	AccessToken string `json:"access_token,omitempty"`
	// AccessTokenExpiresIn: The number of seconds until the access token expires.
	AccessTokenExpiresIn int32 `json:"access_token_expires_in,omitempty"`
	// IDToken: The `id_token` returned by the OAuth provider. ID Tokens are JWTs that contain structured
	// information about a user. The exact content of each ID Token varies from provider to provider. ID Tokens
	// are returned from OAuth providers that conform to the [OpenID Connect](https://openid.net/foundation/)
	// specification, which is based on OAuth.
	IDToken string `json:"id_token,omitempty"`
	// Scopes: The OAuth scopes included for a given provider. See each provider's section above to see which
	// scopes are included by default and how to add custom scopes.
	Scopes []string `json:"scopes,omitempty"`
	// StatusCode: The HTTP status code of the response. Stytch follows standard HTTP response status code
	// patterns, e.g. 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX
	// are server errors.
	StatusCode   int32  `json:"status_code,omitempty"`
	RefreshToken string `json:"refresh_token,omitempty"`
}

// MicrosoftResponse: Response type for `OAuthProviders.Microsoft`.
type MicrosoftResponse struct {
	// RequestID: Globally unique UUID that is returned with every API call. This value is important to log for
	// debugging purposes; we may ask for this value to help identify a specific API call when helping you
	// debug an issue.
	RequestID string `json:"request_id,omitempty"`
	// ProviderType: Denotes the OAuth identity provider that the user has authenticated with, e.g. Google,
	// Microsoft, GitHub etc.
	ProviderType string `json:"provider_type,omitempty"`
	// ProviderSubject: The unique identifier for the User within a given OAuth provider. Also commonly called
	// the `sub` or "Subject field" in OAuth protocols.
	ProviderSubject string `json:"provider_subject,omitempty"`
	// AccessToken: The `access_token` that you may use to access the User's data in the provider's API.
	AccessToken string `json:"access_token,omitempty"`
	// AccessTokenExpiresIn: The number of seconds until the access token expires.
	AccessTokenExpiresIn int32 `json:"access_token_expires_in,omitempty"`
	// IDToken: The `id_token` returned by the OAuth provider. ID Tokens are JWTs that contain structured
	// information about a user. The exact content of each ID Token varies from provider to provider. ID Tokens
	// are returned from OAuth providers that conform to the [OpenID Connect](https://openid.net/foundation/)
	// specification, which is based on OAuth.
	IDToken string `json:"id_token,omitempty"`
	// Scopes: The OAuth scopes included for a given provider. See each provider's section above to see which
	// scopes are included by default and how to add custom scopes.
	Scopes []string `json:"scopes,omitempty"`
	// StatusCode: The HTTP status code of the response. Stytch follows standard HTTP response status code
	// patterns, e.g. 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX
	// are server errors.
	StatusCode   int32  `json:"status_code,omitempty"`
	RefreshToken string `json:"refresh_token,omitempty"`
}

package sso_service

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

import (
	"context"
	"encoding/json"

	"github.com/stytchauth/stytch-go/v7/stytch"
	"github.com/stytchauth/stytch-go/v7/stytch/stytcherror"
)

type Client struct {
	C *stytch.Client
}

const subURL = "sso_service"

func (c *Client) Createoidcconnection(
	ctx context.Context,
	body *stytch.CreateoidcconnectionParams,
) (*stytch.CreateoidcconnectionResponse, error) {
	path := subURL + "//v1/b2b/sso/oidc/{organization_id}"

	var retVal stytch.CreateoidcconnectionResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Createsamlconnection(
	ctx context.Context,
	body *stytch.CreatesamlconnectionParams,
) (*stytch.CreatesamlconnectionResponse, error) {
	path := subURL + "//v1/b2b/sso/saml/{organization_id}"

	var retVal stytch.CreatesamlconnectionResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Updateoidcconnection(
	ctx context.Context,
	body *stytch.UpdateoidcconnectionParams,
) (*stytch.UpdateoidcconnectionResponse, error) {
	path := subURL + "//v1/b2b/sso/oidc/{organization_id}/connections/{connection_id}"

	var retVal stytch.UpdateoidcconnectionResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "PUT", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Updatesamlconnection(
	ctx context.Context,
	body *stytch.UpdatesamlconnectionParams,
) (*stytch.UpdatesamlconnectionResponse, error) {
	path := subURL + "//v1/b2b/sso/saml/{organization_id}/connections/{connection_id}"

	var retVal stytch.UpdatesamlconnectionResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "PUT", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Updatesamlconnectionbyurl(
	ctx context.Context,
	body *stytch.UpdatesamlconnectionbyurlParams,
) (*stytch.UpdatesamlconnectionbyurlResponse, error) {
	path := subURL + "//v1/b2b/sso/saml/{connection_id}/url"

	var retVal stytch.UpdatesamlconnectionbyurlResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "PUT", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Updatesamlconnectionbydoc(
	ctx context.Context,
	body *stytch.UpdatesamlconnectionbydocParams,
) (*stytch.UpdatesamlconnectionbydocResponse, error) {
	path := subURL + "//v1/b2b/sso/saml/{connection_id}/doc"

	var retVal stytch.UpdatesamlconnectionbydocResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "PUT", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Getssoconnections(
	ctx context.Context,
	body *stytch.GetssoconnectionsParams,
) (*stytch.GetssoconnectionsResponse, error) {
	path := subURL + "//v1/b2b/sso/{organization_id}"

	var retVal stytch.GetssoconnectionsResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "GET", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Deletessoconnection(
	ctx context.Context,
	body *stytch.DeletessoconnectionParams,
) (*stytch.DeletessoconnectionResponse, error) {
	path := subURL + "//v1/b2b/sso/{organization_id}/connections/{connection_id}"

	var retVal stytch.DeletessoconnectionResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "DELETE", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Ssoauthenticate(
	ctx context.Context,
	body *stytch.SsoauthenticateParams,
) (*stytch.SsoauthenticateResponse, error) {
	path := subURL + "//v1/b2b/sso/authenticate"

	var retVal stytch.SsoauthenticateResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Deletesamlverificationcertificate(
	ctx context.Context,
	body *stytch.DeletesamlverificationcertificateParams,
) (*stytch.DeletesamlverificationcertificateResponse, error) {
	path := subURL + "//v1/b2b/sso/saml/{organization_id}/connections/{connection_id}/verification_certificates/{certificate_id}"

	var retVal stytch.DeletesamlverificationcertificateResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "DELETE", path, nil, jsonBody, &retVal)

	return &retVal, err
}

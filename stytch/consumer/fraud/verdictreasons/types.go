package verdictreasons

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

import (
	"github.com/stytchauth/stytch-go/v16/stytch/consumer/fraud"
)

// ListParams: Request type for `VerdictReasons.List`.
type ListParams struct {
	// OverridesOnly: Whether to return only verdict reasons that have overrides set. Defaults to false.
	OverridesOnly bool `json:"overrides_only,omitempty"`
}

// OverrideParams: Request type for `VerdictReasons.Override`.
type OverrideParams struct {
	// VerdictReason: The verdict reason that you wish to override. For a list of possible reasons to override,
	// see
	// [Warning Flags (Verdict Reasons)](https://stytch.com/docs/docs/fraud/guides/device-fingerprinting/reference/warning-flags-verdict-reasons). You may not override the `RULE_MATCH` reason.
	VerdictReason string `json:"verdict_reason,omitempty"`
	// OverrideAction: The action that you want to be returned for the specified verdict reason. The override
	// action must be one of `ALLOW`, `BLOCK`, or `CHALLENGE`.
	OverrideAction OverrideRequestAction `json:"override_action,omitempty"`
	// OverrideDescription: An optional description for the verdict reason override.
	OverrideDescription string `json:"override_description,omitempty"`
}

// ListResponse: Response type for `VerdictReasons.List`.
type ListResponse struct {
	// RequestID: Globally unique UUID that is returned with every API call. This value is important to log for
	// debugging purposes; we may ask for this value to help identify a specific API call when helping you
	// debug an issue.
	RequestID string `json:"request_id,omitempty"`
	// VerdictReasonActions: Information about verdict reasons and any overrides that were set on them.
	VerdictReasonActions []fraud.VerdictReasonAction `json:"verdict_reason_actions,omitempty"`
	// StatusCode: The HTTP status code of the response. Stytch follows standard HTTP response status code
	// patterns, e.g. 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX
	// are server errors.
	StatusCode int32 `json:"status_code,omitempty"`
}

// OverrideResponse: Response type for `VerdictReasons.Override`.
type OverrideResponse struct {
	// RequestID: Globally unique UUID that is returned with every API call. This value is important to log for
	// debugging purposes; we may ask for this value to help identify a specific API call when helping you
	// debug an issue.
	RequestID string `json:"request_id,omitempty"`
	// VerdictReasonAction: Information about the verdict reason override that was just set.
	VerdictReasonAction fraud.VerdictReasonAction `json:"verdict_reason_action,omitempty"`
	// StatusCode: The HTTP status code of the response. Stytch follows standard HTTP response status code
	// patterns, e.g. 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX
	// are server errors.
	StatusCode int32 `json:"status_code,omitempty"`
}

type OverrideRequestAction string

const (
	OverrideRequestActionALLOW     OverrideRequestAction = "ALLOW"
	OverrideRequestActionCHALLENGE OverrideRequestAction = "CHALLENGE"
	OverrideRequestActionBLOCK     OverrideRequestAction = "BLOCK"
	OverrideRequestActionNONE      OverrideRequestAction = "NONE"
)

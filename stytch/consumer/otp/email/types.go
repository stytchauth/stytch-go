package email

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

import (
	"github.com/stytchauth/stytch-go/v8/stytch/consumer/attribute"
)

// LoginOrCreateParams: Request type for `Email.LoginOrCreate`.
// Fields:
//
//   - Email: The email address of the user to send the one-time passcode to. You may use
//     sandbox@stytch.com to test this endpoint, see [Testing](https://stytch.com/docs/home#resources_testing)
//     for more detail.
//
//   - ExpirationMinutes: Set the expiration for the Magic Link `token` in minutes. By default, it expires
//     in 1 hour. The minimum expiration is 5 minutes and the maximum is 7 days (10080 mins).
//
//   - Attributes: Provided attributes help with fraud detection.
//
//   - CreateUserAsPending: Flag for whether or not to save a user as pending vs active in Stytch. Defaults
//     to false.
//     If true, users will be saved with status pending in Stytch's backend until authenticated.
//     If false, users will be created as active. An example usage of
//     a true flag would be to require users to verify their phone by entering the OTP code before
//     creating
//     an account for them.
//
//   - Locale: Used to determine which language to use when sending the user this delivery method.
//     Parameter is a [IETF BCP 47 language tag](https://www.w3.org/International/articles/language-tags/),
//     e.g. `"en"`.
//
//     Currently supported languages are English (`"en"`), Spanish (`"es"`), and Brazilian Portuguese
//     (`"pt-br"`); if no value is provided, the copy defaults to English.
//
//     Request support for additional languages
//     [here](https://docs.google.com/forms/d/e/1FAIpQLScZSpAu_m2AmLXRT3F3kap-s_mcV6UTBitYn6CdyWP0-o7YjQ/viewform?usp=sf_link")!
//
//   - LoginTemplateID: Use a custom template for login emails. By default, it will use your default email
//     template. The template must be a template using our built-in customizations or a custom HTML email for
//     Magic links - Login.
//
//   - SignupTemplateID: Use a custom template for sign-up emails. By default, it will use your default
//     email template. The template must be a template using our built-in customizations or a custom HTML email
//     for Magic links - Sign-up.
type LoginOrCreateParams struct {
	Email               string               `json:"email,omitempty"`
	ExpirationMinutes   int32                `json:"expiration_minutes,omitempty"`
	Attributes          attribute.Attributes `json:"attributes,omitempty"`
	CreateUserAsPending bool                 `json:"create_user_as_pending,omitempty"`
	Locale              string               `json:"locale,omitempty"`
	LoginTemplateID     string               `json:"login_template_id,omitempty"`
	SignupTemplateID    string               `json:"signup_template_id,omitempty"`
}

// SendParams: Request type for `Email.Send`.
// Fields:
//
//   - Email: The email address of the user to send the one-time passcode to. You may use
//     sandbox@stytch.com to test this endpoint, see [Testing](https://stytch.com/docs/home#resources_testing)
//     for more detail.
//
//   - ExpirationMinutes: Set the expiration for the Magic Link `token` in minutes. By default, it expires
//     in 1 hour. The minimum expiration is 5 minutes and the maximum is 7 days (10080 mins).
//
//   - Attributes: Provided attributes help with fraud detection.
//
//   - Locale: Used to determine which language to use when sending the user this delivery method.
//     Parameter is a [IETF BCP 47 language tag](https://www.w3.org/International/articles/language-tags/),
//     e.g. `"en"`.
//
//     Currently supported languages are English (`"en"`), Spanish (`"es"`), and Brazilian Portuguese
//     (`"pt-br"`); if no value is provided, the copy defaults to English.
//
//     Request support for additional languages
//     [here](https://docs.google.com/forms/d/e/1FAIpQLScZSpAu_m2AmLXRT3F3kap-s_mcV6UTBitYn6CdyWP0-o7YjQ/viewform?usp=sf_link")!
//
//   - UserID: The unique ID of a specific User.
//
//   - SessionToken: The `session_token` associated with a User's existing Session.
//
//   - SessionJWT: The `session_jwt` associated with a User's existing Session.
//
//   - LoginTemplateID: Use a custom template for login emails. By default, it will use your default email
//     template. The template must be a template using our built-in customizations or a custom HTML email for
//     Magic links - Login.
//
//   - SignupTemplateID: Use a custom template for sign-up emails. By default, it will use your default
//     email template. The template must be a template using our built-in customizations or a custom HTML email
//     for Magic links - Sign-up.
type SendParams struct {
	Email             string               `json:"email,omitempty"`
	ExpirationMinutes int32                `json:"expiration_minutes,omitempty"`
	Attributes        attribute.Attributes `json:"attributes,omitempty"`
	Locale            string               `json:"locale,omitempty"`
	UserID            string               `json:"user_id,omitempty"`
	SessionToken      string               `json:"session_token,omitempty"`
	SessionJWT        string               `json:"session_jwt,omitempty"`
	LoginTemplateID   string               `json:"login_template_id,omitempty"`
	SignupTemplateID  string               `json:"signup_template_id,omitempty"`
}

// LoginOrCreateResponse: Response type for `Email.LoginOrCreate`.
// Fields:
//   - RequestID: Globally unique UUID that is returned with every API call. This value is important to log
//     for debugging purposes; we may ask for this value to help identify a specific API call when helping you
//     debug an issue.
//   - UserID: The unique ID of the affected User.
//   - EmailID: The unique ID of a specific email address.
//   - UserCreated: In `login_or_create` endpoints, this field indicates whether or not a User was just
//     created.
//   - StatusCode: The HTTP status code of the response. Stytch follows standard HTTP response status code
//     patterns, e.g. 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX
//     are server errors.
type LoginOrCreateResponse struct {
	RequestID   string `json:"request_id,omitempty"`
	UserID      string `json:"user_id,omitempty"`
	EmailID     string `json:"email_id,omitempty"`
	UserCreated bool   `json:"user_created,omitempty"`
	StatusCode  int32  `json:"status_code,omitempty"`
}

// SendResponse: Response type for `Email.Send`.
// Fields:
//   - RequestID: Globally unique UUID that is returned with every API call. This value is important to log
//     for debugging purposes; we may ask for this value to help identify a specific API call when helping you
//     debug an issue.
//   - UserID: The unique ID of the affected User.
//   - EmailID: The unique ID of a specific email address.
//   - StatusCode: The HTTP status code of the response. Stytch follows standard HTTP response status code
//     patterns, e.g. 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX
//     are server errors.
type SendResponse struct {
	RequestID  string `json:"request_id,omitempty"`
	UserID     string `json:"user_id,omitempty"`
	EmailID    string `json:"email_id,omitempty"`
	StatusCode int32  `json:"status_code,omitempty"`
}

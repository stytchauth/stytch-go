package organizations

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

import (
	"context"
	"encoding/json"

	"github.com/stytchauth/stytch-go/v7/stytch"
	"github.com/stytchauth/stytch-go/v7/stytch/stytcherror"
)

type Client struct {
	C *stytch.Client
}

const subURL = "organizations"

func (c *Client) Organizationscreate(
	ctx context.Context,
	body *stytch.OrganizationscreateParams,
) (*stytch.OrganizationscreateResponse, error) {
	path := subURL + "//v1/b2b/organizations"

	var retVal stytch.OrganizationscreateResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Organizationsget(
	ctx context.Context,
	body *stytch.OrganizationsgetParams,
) (*stytch.OrganizationsgetResponse, error) {
	path := subURL + "//v1/b2b/organizations/{organization_id}"

	var retVal stytch.OrganizationsgetResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "GET", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Organizationsupdate(
	ctx context.Context,
	body *stytch.OrganizationsupdateParams,
) (*stytch.OrganizationsupdateResponse, error) {
	path := subURL + "//v1/b2b/organizations/{organization_id}"

	var retVal stytch.OrganizationsupdateResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "PUT", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Organizationsdelete(
	ctx context.Context,
	body *stytch.OrganizationsdeleteParams,
) (*stytch.OrganizationsdeleteResponse, error) {
	path := subURL + "//v1/b2b/organizations/{organization_id}"

	var retVal stytch.OrganizationsdeleteResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "DELETE", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Organizationsmembercreate(
	ctx context.Context,
	body *stytch.OrganizationsmembercreateParams,
) (*stytch.OrganizationsmembercreateResponse, error) {
	path := subURL + "//v1/b2b/organizations/{organization_id}/members"

	var retVal stytch.OrganizationsmembercreateResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Organizationsmemberupdate(
	ctx context.Context,
	body *stytch.OrganizationsmemberupdateParams,
) (*stytch.OrganizationsmemberupdateResponse, error) {
	path := subURL + "//v1/b2b/organizations/{organization_id}/members/{member_id}"

	var retVal stytch.OrganizationsmemberupdateResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "PUT", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Organizationsmemberdelete(
	ctx context.Context,
	body *stytch.OrganizationsmemberdeleteParams,
) (*stytch.OrganizationsmemberdeleteResponse, error) {
	path := subURL + "//v1/b2b/organizations/{organization_id}/members/{member_id}"

	var retVal stytch.OrganizationsmemberdeleteResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "DELETE", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Organizationssearchexternal(
	ctx context.Context,
	body *stytch.OrganizationssearchexternalParams,
) (*stytch.OrganizationssearchexternalResponse, error) {
	path := subURL + "//v1/b2b/organizations/search"

	var retVal stytch.OrganizationssearchexternalResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Organizationsmembersearchexternal(
	ctx context.Context,
	body *stytch.OrganizationsmembersearchexternalParams,
) (*stytch.OrganizationsmembersearchexternalResponse, error) {
	path := subURL + "//v1/b2b/organizations/members/search"

	var retVal stytch.OrganizationsmembersearchexternalResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Organizationsmemberdeletepassword(
	ctx context.Context,
	body *stytch.OrganizationsmemberdeletepasswordParams,
) (*stytch.OrganizationsmemberdeletepasswordResponse, error) {
	path := subURL + "//v1/b2b/organizations/{organization_id}/members/passwords/{member_password_id}"

	var retVal stytch.OrganizationsmemberdeletepasswordResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "DELETE", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Organizationsmemberget(
	ctx context.Context,
	body *stytch.OrganizationsmembergetParams,
) (*stytch.OrganizationsmembergetResponse, error) {
	path := subURL + "//v1/b2b/organizations/{organization_id}/member"

	var retVal stytch.OrganizationsmembergetResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "GET", path, nil, jsonBody, &retVal)

	return &retVal, err
}

package multi_tenant_magic_links

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

import (
	"context"
	"encoding/json"

	"github.com/stytchauth/stytch-go/v7/stytch"
	"github.com/stytchauth/stytch-go/v7/stytch/stytcherror"
)

type Client struct {
	C *stytch.Client
}

const subURL = "multi_tenant_magic_links"

func (c *Client) Multitenantmagiclinksemailloginorsignup(
	ctx context.Context,
	body *stytch.MultitenantmagiclinksemailloginorsignupParams,
) (*stytch.MultitenantmagiclinksemailloginorsignupResponse, error) {
	path := subURL + "//v1/b2b/magic_links/email/login_or_signup"

	var retVal stytch.MultitenantmagiclinksemailloginorsignupResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Multitenantmagiclinksemailinvite(
	ctx context.Context,
	body *stytch.MultitenantmagiclinksemailinviteParams,
) (*stytch.MultitenantmagiclinksemailinviteResponse, error) {
	path := subURL + "//v1/b2b/magic_links/email/invite"

	var retVal stytch.MultitenantmagiclinksemailinviteResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) Multitenantmagiclinksauthenticate(
	ctx context.Context,
	body *stytch.MultitenantmagiclinksauthenticateParams,
) (*stytch.MultitenantmagiclinksauthenticateResponse, error) {
	path := subURL + "//v1/b2b/magic_links/authenticate"

	var retVal stytch.MultitenantmagiclinksauthenticateResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) B2Bmagiclinksemaildiscoverysend(
	ctx context.Context,
	body *stytch.B2BmagiclinksemaildiscoverysendParams,
) (*stytch.B2BmagiclinksemaildiscoverysendResponse, error) {
	path := subURL + "//v1/b2b/magic_links/email/discovery/send"

	var retVal stytch.B2BmagiclinksemaildiscoverysendResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}

func (c *Client) B2Bmagiclinksdiscoveryauthenticate(
	ctx context.Context,
	body *stytch.B2BmagiclinksdiscoveryauthenticateParams,
) (*stytch.B2BmagiclinksdiscoveryauthenticateResponse, error) {
	path := subURL + "//v1/b2b/magic_links/discovery/authenticate"

	var retVal stytch.B2BmagiclinksdiscoveryauthenticateResponse
	var jsonBody []byte
	var err error
	if body != nil {
		jsonBody, err = json.Marshal(body)
		if err != nil {
			return nil, stytcherror.NewClientLibraryError("Oops, something seems to have gone wrong marshalling the request body")
		}
	}

	err = c.C.NewRequest(ctx, "POST", path, nil, jsonBody, &retVal)

	return &retVal, err
}
